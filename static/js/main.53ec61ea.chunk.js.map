{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","validate","useState","Math","random","toFixed","slice","id","touched","setTouched","urlTextfields","hasError","trim","hasUrlError","htmlFor","type","classNames","onBlur","NewMovie","onAdd","defaultMovie","count","setCount","newMovie","setNewMovie","addNewValue","prevMovies","validateUrl","url","test","disabledBtn","onSubmit","e","target","disabled","App","moviesFromServer","currentMovies","setCurrentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53ec61ea.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  validate?: () => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  validate = () => true || false,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n\n  const urlTextfields = name === 'imgUrl' || name === 'imdbUrl';\n  const hasError = touched && required && !value.trim();\n  const hasUrlError = validate() && touched && urlTextfields;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': (hasError || hasUrlError),\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n      {hasUrlError && (\n        <p className=\"help is-danger\">Enter valid Url</p>\n      )}\n\n      {hasError && !urlTextfields && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const defaultMovie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState(defaultMovie);\n\n  const addNewValue = (title: string, value: string) => {\n    setNewMovie((prevMovies) => ({\n      ...prevMovies,\n      [title]: value,\n    }));\n  };\n\n  const validateUrl = (url: string) => {\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    return !pattern.test(url);\n  };\n\n  const disabledBtn = !newMovie.title.trim()\n  || !newMovie.imgUrl.trim()\n  || !newMovie.imdbUrl.trim()\n  || !newMovie.imdbId.trim()\n  || validateUrl(newMovie.imgUrl)\n  || validateUrl(newMovie.imdbUrl);\n\n  const handleSubmit = () => {\n    onAdd(newMovie);\n    setNewMovie(defaultMovie);\n    setCount(count + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={e => addNewValue('title', e.target.value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={e => addNewValue('description', e.target.value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={e => addNewValue('imgUrl', e.target.value)}\n        required\n        validate={() => validateUrl(newMovie.imgUrl)}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={e => addNewValue('imdbUrl', e.target.value)}\n        required\n        validate={() => validateUrl(newMovie.imdbUrl)}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={e => addNewValue('imdbId', e.target.value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={disabledBtn}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [currentMovies, setCurrentMovies] = useState(moviesFromServer);\n\n  const addNewMovie = (movie: Movie) => {\n    setCurrentMovies([\n      ...currentMovies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={currentMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}