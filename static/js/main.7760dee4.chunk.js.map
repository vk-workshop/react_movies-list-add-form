{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","validate","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","disabledBtn","setDisabledBtn","validateUrl","url","test","useEffect","onSubmit","event","target","disabled","App","moviesFromServer","currentMovies","setCurrentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7760dee4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  validate?: () => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  validate = () => true || false,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && validate() && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [disabledBtn, setDisabledBtn] = useState(true);\n\n  const validateUrl = (url: string) => {\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    return !pattern.test(url);\n  };\n\n  const deleteInputValues = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  useEffect(() => {\n    if (title && imgUrl && imdbUrl && imdbId) {\n      setDisabledBtn(false);\n    } else {\n      setDisabledBtn(true);\n    }\n  }, [title, imgUrl, imdbUrl, imdbId]);\n\n  const handleSubmit = () => {\n    const newMovie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n    setDisabledBtn(true);\n    deleteInputValues();\n    setCount(count + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(event) => setImgUrl(event.target.value)}\n        required\n        validate={() => validateUrl(imgUrl)}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(event) => setImdbUrl(event.target.value)}\n        required\n        validate={() => validateUrl(imdbUrl)}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(event) => setImdbId(event.target.value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={disabledBtn}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [currentMovies, setCurrentMovies] = useState(moviesFromServer);\n\n  const addNewMovie = (movie: Movie) => {\n    setCurrentMovies([\n      ...currentMovies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={currentMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}